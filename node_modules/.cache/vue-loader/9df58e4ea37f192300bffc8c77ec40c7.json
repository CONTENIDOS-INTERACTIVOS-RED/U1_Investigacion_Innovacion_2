{"remainingRequest":"/home/runner/work/U1_Investigacion_Innovacion_2/U1_Investigacion_Innovacion_2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U1_Investigacion_Innovacion_2/U1_Investigacion_Innovacion_2/src/views/curso/Tema2.vue?vue&type=template&id=be13a028&lang=pug&","dependencies":[{"path":"/home/runner/work/U1_Investigacion_Innovacion_2/U1_Investigacion_Innovacion_2/src/views/curso/Tema2.vue","mtime":1736440317351},{"path":"/home/runner/work/U1_Investigacion_Innovacion_2/U1_Investigacion_Innovacion_2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U1_Investigacion_Innovacion_2/U1_Investigacion_Innovacion_2/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U1_Investigacion_Innovacion_2/U1_Investigacion_Innovacion_2/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U1_Investigacion_Innovacion_2/U1_Investigacion_Innovacion_2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U1_Investigacion_Innovacion_2/U1_Investigacion_Innovacion_2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}